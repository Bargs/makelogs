{"version":3,"sources":["../src/_randomEvent.js"],"names":["samples","require","argv","eventCounter","count","total","countPerDay","cursor","start","clone","countOfDays","end","valueOf","add","Math","ceil","indexInterval","dayMoment","day","module","exports","RandomEvent","indexPrefix","event","i","iInDay","year","month","date","ms","lessRandomMsInDay","hours","floor","minutes","seconds","Date","dateAsIso","toISOString","index","substr","ip","ips","extension","extensions","response","responseCodes","geo","coordinates","airports","src","countries","dest","srcdest","tags","tags2","utc_time","referer","referrers","astronauts","agent","userAgents","clientip","bytes","lessRandomRespSize","host","request","phpmemory","memory","stylesheets","url","spaces","xss","headings","links","relatedContent","machine","os","randomOs","ram","randomRam"],"mappings":"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","file":"_randomEvent.js","sourcesContent":["const samples = require('./samples')\nconst argv = require('./argv')\n\nlet eventCounter = -1\nconst count = argv.total\nconst countPerDay = (() => {\n  const cursor = argv.start.clone()\n  let countOfDays = 0\n  const end = argv.end.valueOf()\n\n  if (cursor.valueOf() <= end) {\n    do {\n      cursor.add(1, 'day')\n      countOfDays += 1\n    } while (cursor.valueOf() <= end)\n  }\n\n  return Math.ceil(count / countOfDays)\n})()\n\nconst indexInterval = argv.indexInterval\nconst dayMoment = argv.start.clone()\nlet day\n\nmodule.exports = function RandomEvent(indexPrefix) {\n  const event = {}\n\n  eventCounter += 1\n  const i = eventCounter\n  const iInDay = i % countPerDay\n\n  if (day && iInDay === 0) {\n    dayMoment.add(1, 'day')\n    day = null\n  }\n\n  if (day == null) {\n    day = {\n      year: dayMoment.year(),\n      month: dayMoment.month(),\n      date: dayMoment.date(),\n    }\n  }\n\n  let ms = samples.lessRandomMsInDay()\n\n  // extract number of hours from the milliseconds\n  const hours = Math.floor(ms / 3600000)\n  ms -= hours * 3600000\n\n  // extract number of minutes from the milliseconds\n  const minutes = Math.floor(ms / 60000)\n  ms -= minutes * 60000\n\n  // extract number of seconds from the milliseconds\n  const seconds = Math.floor(ms / 1000)\n  ms -= seconds * 1000\n\n  // apply the values found to the date\n  const date = new Date(day.year, day.month, day.date, hours, minutes, seconds, ms)\n  const dateAsIso = date.toISOString()\n\n  switch (indexInterval) {\n    case 'yearly':\n      event.index = indexPrefix + dateAsIso.substr(0, 4)\n      break\n\n    case 'monthly':\n      event.index = `${indexPrefix + dateAsIso.substr(0, 4)}.${dateAsIso.substr(5, 2)}`\n      break\n    case 'daily':\n      event.index = `${indexPrefix + dateAsIso.substr(0, 4)}.${dateAsIso.substr(5, 2)}${dateAsIso.substr(8, 2)}`\n      break\n\n    default:\n      event.index = indexPrefix + Math.floor(i / indexInterval)\n      break\n  }\n\n  event['@timestamp'] = dateAsIso\n  event.ip = samples.ips()\n  event.extension = samples.extensions()\n  event.response = samples.responseCodes()\n\n  event.geo = {\n    coordinates: samples.airports(),\n    src: samples.countries(),\n    dest: samples.countries(),\n  }\n  event.geo.srcdest = `${event.geo.src}:${event.geo.dest}`\n\n  event['@tags'] = [\n    samples.tags(),\n    samples.tags2(),\n  ]\n  event.utc_time = dateAsIso\n  event.referer = `http://${samples.referrers()}/${samples.tags()}/${samples.astronauts()}`\n  event.agent = samples.userAgents()\n  event.clientip = event.ip\n  event.bytes = event.response < 500 ? samples.lessRandomRespSize(event.extension) : 0\n\n  switch (event.extension) {\n    case 'php':\n      event.host = 'theacademyofperformingartsandscience.org'\n      event.request = `/people/type:astronauts/name:${samples.astronauts()}/profile`\n      event.phpmemory = event.memory = event.bytes * 40\n      break\n    case 'gif':\n      event.host = 'motion-media.theacademyofperformingartsandscience.org'\n      event.request = `/canhaz/${samples.astronauts()}.${event.extension}`\n      break\n    case 'css':\n      event.host = 'cdn.theacademyofperformingartsandscience.org'\n      event.request = `/styles/${samples.stylesheets()}`\n      break\n    default:\n      event.host = 'media-for-the-masses.theacademyofperformingartsandscience.org'\n      event.request = `/uploads/${samples.astronauts()}.${event.extension}`\n      break\n  }\n\n  event.url = `https://${event.host}${event.request}`\n\n  event['@message'] = `${event.ip} - - [${dateAsIso}] \"GET ${event.request} HTTP/1.1\" ${\n      event.response} ${event.bytes} \"-\" \"${event.agent}\"`\n  event.spaces = 'this   is   a   thing    with lots of     spaces       wwwwoooooo'\n  event.xss = '<script>console.log(\"xss\")</script>'\n  event.headings = [\n    `<h3>${samples.astronauts()}</h5>`,\n    `http://${samples.referrers()}/${samples.tags()}/${samples.astronauts()}`,\n  ]\n  event.links = [\n    `${samples.astronauts()}@${samples.referrers()}`,\n    `http://${samples.referrers()}/${samples.tags2()}/${samples.astronauts()}`,\n    `www.${samples.referrers()}`,\n  ]\n\n  event.relatedContent = samples.relatedContent()\n\n  event.machine = {\n    os: samples.randomOs(),\n    ram: samples.randomRam(),\n  }\n\n  return event\n}\n"]}